@model MyPawDiaryApp.Models.Pet

@{
    ViewBag.Title = Model.Name + " - Details";
}

<style>
    .btn-paw {
        background-color: #ff85a2;
        color: white;
        padding: 10px 25px;
        border-radius: 30px;
        font-size: 1em;
        transition: background-color 0.3s ease, transform 0.2s;
        text-decoration: none;
    }

        .btn-paw:hover {
            background-color: #ff6186;
            transform: scale(1.05);
        }

    .card-header {
        font-weight: bold;
        font-size: 1.2rem;
    }

    .card {
        border-radius: 10px;
    }

    .list-group-item {
        font-size: 0.95rem;
    }

    .badge-status {
        font-size: 0.8rem;
        margin-left: 5px;
    }
</style>

<div class="container mt-4">
    <div class="row">
        <!-- Pet Info -->
        <div class="col-md-4 mb-4">
            <div class="card shadow-sm h-100">
                <img src="@(!string.IsNullOrEmpty(Model.Photo) ? Model.Photo : "https://via.placeholder.com/300x300?text=No+Photo")"
                     class="card-img-top" alt="@Model.Name" style="object-fit:cover; height:300px;">
                <div class="card-body text-center">
                    <h3 class="card-title mb-3">@Model.Name</h3>
                    <p class="card-text mb-1"><strong>Species:</strong> @Model.Species</p>
                    <p class="card-text mb-1"><strong>Breed:</strong> @Model.Breed</p>
                    <p class="card-text mb-1"><strong>Gender:</strong> @Model.Gender</p>
                    <p class="card-text mb-1"><strong>Date of Birth:</strong> @Model.DateOfBirth.ToString("dd MMM yyyy")</p>

                    <div class="mt-4 d-flex justify-content-center">
                        @Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @class = "btn btn-outline-secondary me-2" })
                        @using (Html.BeginForm("Delete", "Pets", FormMethod.Post, new { onsubmit = "return confirm('Are you sure you want to delete this pet?');" }))
                        {
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@Model.Id" />
                            <button type="submit" class="btn btn-outline-danger">Delete</button>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Medical Records and Activities -->
        <div class="col-md-8">

            <!-- Add Activiites Modals -->

            <div class="col-md-8">
                <div class="d-flex justify-content-between mb-3">
                    <h4>Activities</h4>
                    <div>
                        <button class="btn btn-sm btn-info me-2" data-bs-toggle="modal" data-bs-target="#dailyActivityModal">
                            Add Daily Activity
                        </button>
                        <button class="btn btn-sm btn-warning text-dark" data-bs-toggle="modal" data-bs-target="#oneTimeActivityModal">
                            Add Event
                        </button>
                        <button class="btn btn-sm btn-info me-2" data-bs-toggle="modal" data-bs-target="#medicalRecordModal">
                            Add Medical Record
                        </button>
                    </div>
                </div>

                <!-- Daily Activities Modal -->
                <div class="modal fade" id="dailyActivityModal" tabindex="-1" aria-labelledby="dailyActivityModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            @using (Html.BeginForm("CreateDailyActivity", "Activities", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <div class="modal-header">
                                    <h5 class="modal-title" id="dailyActivityModalLabel">Add Daily Activity for @Model.Name</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    @Html.HiddenFor(m => m.Id, new { Name = "PetId", Value = Model.Id })

                                    <div class="mb-3">
                                        @Html.Label("Name")
                                        @Html.TextBox("Name", "", new { @class = "form-control", placeholder = "Activity Name" })
                                    </div>
                                    <div class="mb-3">
                                        @Html.Label("Notes")
                                        @Html.TextArea("Notes", null, new { @class = "form-control", placeholder = "Optional notes..." })
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-primary">Save</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- One-Time Activity Modal -->
                <div class="modal fade" id="oneTimeActivityModal" tabindex="-1" aria-labelledby="oneTimeActivityModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            @using (Html.BeginForm("CreateOneTimeActivity", "Activities", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <div class="modal-header">
                                    <h5 class="modal-title" id="oneTimeActivityModalLabel">Add Event for @Model.Name</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    @Html.HiddenFor(m => m.Id, new { Name = "PetId", Value = Model.Id })

                                    <div class="mb-3">
                                        @Html.Label("Name")
                                        @Html.TextBox("Name", "", new { @class = "form-control", placeholder = "Event Name" })
                                    </div>
                                    <div class="mb-3">
                                        @Html.Label("Notes")
                                        @Html.TextArea("Notes", null, new { @class = "form-control", placeholder = "Optional notes..." })
                                    </div>
                                    <div class="mb-3">
                                        @Html.Label("Date & Time")
                                        @Html.TextBox("DateAndTime", null, new { @class = "form-control", type = "datetime-local" })
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-warning text-dark">Save</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- Add Medical Record Modal -->
                <div class="modal fade" id="medicalRecordModal" tabindex="-1" aria-labelledby="medicalRecordModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            @using (Html.BeginForm("CreateMedicalRecord", "Activities", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <div class="modal-header">
                                    <h5 class="modal-title" id="medicalRecordModalLabel">Add Medical Record for @Model.Name</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    @Html.Hidden("PetId", Model.Id)

                                    <div class="mb-3">
                                        @Html.Label("Select Activity")
                                        @Html.DropDownList("ActivityId", new SelectList(Model.OneTimeActivities.Where(a => a.DateAndTime <= DateTime.Now), "Id", "Name"), "Select Activity", new { @class = "form-control" })
                                    </div>

                                    <div class="mb-3">
                                        @Html.Label("Notes")
                                        @Html.TextArea("Notes", null, new { @class = "form-control", placeholder = "Add notes..." })
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-primary">Save</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>

            </div>


            <!-- Medical Records -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-white">Medical Records</div>
                <div class="card-body">
                    @if (Model.MedicalRecords != null && Model.MedicalRecords.Any())
                    {
                        <ul class="list-group list-group-flush">
                            @foreach (var record in Model.MedicalRecords.OrderByDescending(r => r.Date))
                            {
                                <li class="list-group-item">
                                    <strong>@record.Date.ToString("dd MMM yyyy"):</strong> @record.Notes
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="text-muted">No medical records available.</p>
                    }
                </div>
            </div>

            <!-- Daily Activities -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-info text-white">Daily Activities</div>
                <div class="card-body">
                    @if (Model.DailyActivities != null && Model.DailyActivities.Any())
                    {
                        <ul class="list-group list-group-flush">
                            @foreach (var activity in Model.DailyActivities)
                            {
                                <li class="list-group-item d-flex align-items-center justify-content-between">
                                    <div>
                                        <input type="checkbox" class="activity-checkbox"
                                               data-petid="@activity.PetId"
                                               data-activityid="@activity.Id"
                                               data-activitytype="Daily"
                                               @(activity.IsDoneToday ? "checked" : "") />
                                        <span class="ml-2">@activity.Name</span>
                                    </div>

                                    <div class="d-flex align-items-center">
                                        <span class="badge bg-success @(activity.IsDoneToday ? "" : "d-none")">Done</span>

                                        @using (Html.BeginForm("DeleteDailyActivity", "Activities", FormMethod.Post, new { onsubmit = "return confirm('Are you sure you want to delete this activity?');" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            @*@Html.Hidden("id", "1")*@
                                            @Html.Hidden("activityId", activity.Id)
                                            @Html.Hidden("petId", activity.PetId)
                                            <button type="submit" class="btn btn-sm btn-danger ms-2" title="Delete Activity">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        }
                                    </div>
                                </li>

                            }
                        </ul>
                    }
                    else
                    {
                        <p class="text-muted">No daily activities recorded.</p>
                    }
                </div>
            </div>


            <!-- One-Time Activities -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-warning text-dark">One-Time Activities</div>
                <div class="card-body">
                    @if (Model.OneTimeActivities != null && Model.OneTimeActivities.Any())
                    {
                        <h6>Upcoming</h6>
                        <ul class="list-group list-group-flush mb-3">
                            @foreach (var activity in Model.OneTimeActivities.Where(a => a.DateAndTime >= DateTime.Now).OrderBy(a => a.DateAndTime))
                            {
                                <li class="list-group-item d-flex align-items-center justify-content-between">
                                    <div>
                                        <input type="checkbox" class="activity-checkbox"
                                               data-petid="@activity.PetId"
                                               data-activityid="@activity.Id"
                                               data-activitytype="OneTime"
                                               @(activity.isCompleted ? "checked" : "") />
                                        <span class="ml-2">@activity.Name at @activity.DateAndTime</span>
                                    </div>

                                    <div class="d-flex align-items-center">
                                        <span class="badge bg-success @(activity.isCompleted ? "" : "d-none")">Done</span>

                                        @using (Html.BeginForm("DeleteOneTimeActivity", "Activities", FormMethod.Post, new { onsubmit = "return confirm('Are you sure you want to delete this event?');" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            @Html.Hidden("activityId", activity.Id)
                                            <button type="submit" class="btn btn-sm btn-danger ms-2" title="Delete Event">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        }
                                    </div>
                                </li>

                            }
                        </ul>

                        <h6>Past</h6>
                        <ul class="list-group list-group-flush">
                            @foreach (var activity in Model.OneTimeActivities.Where(a => a.DateAndTime < DateTime.Now).OrderByDescending(a => a.DateAndTime))
                            {
                                <li class="list-group-item text-muted">
                                    <span class="ml-2">@activity.Name at @activity.DateAndTime</span>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="text-muted">No one-time activities recorded.</p>
                    }
                </div>
            </div>

        </div>
    </div>

    <div class="mt-4 text-center">
        @Html.ActionLink("Back to My Pets", "Index", null, new { @class = "btn btn-paw" })
    </div>
</div>

@section scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $(".activity-checkbox").change(function () {
                var checkbox = $(this);
                var petId = checkbox.data("petid");
                var activityId = checkbox.data("activityid");
                var activityType = checkbox.data("activitytype");

                console.log("Checkbox changed!");
                console.log("PetId:", petId);
                console.log("ActivityId:", activityId);
                console.log("ActivityType:", activityType);
                console.log("Is checked:", checkbox.is(":checked"));

                var token = $('input[name="__RequestVerificationToken"]').val();


                $.ajax({
                    url: '@Url.Action("MarkDone", "Feed")',
                    type: 'POST',
                    data: {
                        petId: petId,
                        activityId: activityId,
                        activityType: activityType,
                        __RequestVerificationToken: token
                    },
                    success: function () {
                        console.log("AJAX success!");
                        var badge = checkbox.closest("li").find(".badge");
                        if (checkbox.is(":checked")) {
                            console.log("AJAX success!");

                            badge.removeClass("d-none");
                        } else {
                            console.log("Marking as not done");
                            badge.addClass("d-none");
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("AJAX error!");
                        console.error("Status:", status);
                        console.error("Error:", error);
                        console.log("Response text:", xhr.responseText);
                        alert("Could not update the activity. Please try again.");
                        // revert checkbox state
                        checkbox.prop("checked", !checkbox.is(":checked"));
                    }
                });
            });
        });
    </script>
}